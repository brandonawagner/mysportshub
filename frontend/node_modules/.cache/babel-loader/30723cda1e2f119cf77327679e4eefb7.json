{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwagner/Desktop/MyApps/mysportshub/frontend/src/AddTeams.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PickTeams() {\n  _s();\n\n  const Static_NCAA = \"NCAA\";\n  const Static_NFL = \"NFL\";\n  const Static_NBA = \"NBA\";\n  const [user, setUser] = useContext(UserContext);\n  const [userTeams, setUserTeams] = useState(user.userTeams);\n  const [collegeDropDown, setNCAADropdown] = useState([]);\n  const [isCollegeSelected, setIsNCAASelected] = useState(false);\n  const [isNFLSelected, setIsNFLSelected] = useState(false);\n  const [isNBASelected, setIsNBASelected] = useState(false);\n  const leagueList = user.userLeagues.map(league => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: league\n  }, user.userLeagues.indexOf(league), false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }, this));\n  const teamsRef = useRef();\n  useEffect(() => {\n    async function fetchTeams() {\n      /*fetch college teams*/\n\n      /*const data = await fetch('https://api.collegefootballdata.com/teams/fbs')*/\n      const apiLocation = window.location.hostname + '/api/league/team';\n      const data = await fetch(apiLocation);\n      const teams = await data.json();\n      const ncaaCheckbox = teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: setNCAATeamsChangeHandler,\n            style: {\n              display: \"in-line\"\n            },\n            type: \"checkbox\",\n            name: team.school + ' ' + team.mascot,\n            value: team.school + \"/\" + team.mascot\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \" \" + team.school + ' ' + team.mascot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this));\n      teamsRef.current = {\n        ncaaCheckbox: ncaaCheckbox\n      };\n      setNCAADropdown(teamsRef.current.ncaaCheckbox);\n    }\n\n    fetchTeams();\n\n    const setSelectedValues = () => {\n      for (let i = 0; i < user.userLeagues.length; i++) {\n        if (user.userLeagues[i] === Static_NCAA) {\n          setIsNCAASelected(true);\n        } else if (user.userLeagues[i] === Static_NFL) {\n          setIsNFLSelected(true);\n        } else if (user.userLeagues[i] === Static_NBA) {\n          setIsNBASelected(true);\n        } else {\n          throw \"Invalid league \" & user.userLeagues[i];\n        }\n      }\n    };\n\n    setSelectedValues();\n  }, [user]);\n\n  const setNCAATeamsChangeHandler = e => {\n    /*do not prevent default, we want the click*/\n    setUserTeams(prev => {\n      if (e.target.checked) {\n        let teamArr = e.target.value.split(\"/\");\n        return [...prev, {\n          league: Static_NCAA,\n          team: teamArr[0],\n          mascot: teamArr[1]\n        }];\n      } else {\n        let found = false;\n\n        for (let i = 0; i < prev.length; i++) {\n          if (prev[i].league === Static_NCAA && prev[i].team === e.target.value && !found) {\n            prev.splice(i, 1);\n            found = true;\n          }\n        }\n\n        return prev;\n      }\n    });\n  };\n\n  const setUserInfoClickHandler = e => {\n    e.preventDefault();\n    setUser(() => ({\n      email: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      password: user.password,\n      userLeagues: user.userLeagues,\n      userTeams: userTeams\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pick Your Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leagueList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"College Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"teamsPickForm\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: isCollegeSelected ? \"scroll\" : \"hidden\",\n        name: \"collegeTeamsPick\",\n        form: \"teamsPickForm\",\n        children: collegeDropDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark\",\n      onClick: setUserInfoClickHandler,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./Home\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PickTeams, \"CAdgu70z1lunaIJKl3zaeOQB+uE=\");\n\n_c = PickTeams;\nexport default PickTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"PickTeams\");","map":{"version":3,"sources":["/Users/brandonwagner/Desktop/MyApps/mysportshub/frontend/src/AddTeams.js"],"names":["Link","UserContext","React","useContext","useState","useEffect","useRef","PickTeams","Static_NCAA","Static_NFL","Static_NBA","user","setUser","userTeams","setUserTeams","collegeDropDown","setNCAADropdown","isCollegeSelected","setIsNCAASelected","isNFLSelected","setIsNFLSelected","isNBASelected","setIsNBASelected","leagueList","userLeagues","map","league","indexOf","teamsRef","fetchTeams","apiLocation","window","location","hostname","data","fetch","teams","json","ncaaCheckbox","team","setNCAATeamsChangeHandler","display","school","mascot","id","current","setSelectedValues","i","length","e","prev","target","checked","teamArr","value","split","found","splice","setUserInfoClickHandler","preventDefault","email","firstName","lastName","password"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useState, useEffect, useRef } from 'react'\n\n\nfunction PickTeams() {\n\n  const Static_NCAA = \"NCAA\"\n  const Static_NFL = \"NFL\"\n  const Static_NBA = \"NBA\"\n\n  const [user, setUser] = useContext(UserContext);\n\n  const [userTeams, setUserTeams] = useState(user.userTeams)\n\n  const [collegeDropDown, setNCAADropdown] = useState([])\n\n  const [isCollegeSelected, setIsNCAASelected] = useState(false)\n  const [isNFLSelected, setIsNFLSelected] = useState(false)\n  const [isNBASelected, setIsNBASelected] = useState(false)\n\n  const leagueList = user.userLeagues.map(\n    (league) => <li key={user.userLeagues.indexOf(league)}>{league}</li>\n  )\n\n  const teamsRef = useRef();\n  useEffect(() => {\n\n    async function fetchTeams() {\n\n      /*fetch college teams*/\n      /*const data = await fetch('https://api.collegefootballdata.com/teams/fbs')*/\n\n      const apiLocation = window.location.hostname + '/api/league/team'\n      const data = await fetch(apiLocation)\n  \n      const teams = await data.json()\n  \n      const ncaaCheckbox = teams.map(\n        (team) => <div key={team.id}>\n          <label>\n            <input onChange={setNCAATeamsChangeHandler} \n                  style={{ display: \"in-line\" }} type=\"checkbox\" \n                  key={team.id} \n                  name={team.school + ' ' + team.mascot} \n                  value={team.school + \"/\" + team.mascot} />\n            {\" \" + team.school + ' ' + team.mascot}\n          </label>\n        </div>\n      )\n  \n      teamsRef.current = { ncaaCheckbox: ncaaCheckbox };\n      setNCAADropdown(teamsRef.current.ncaaCheckbox)\n    }\n    fetchTeams();\n\n\n\n    const setSelectedValues = () =>{\n\n      for(let i = 0; i < user.userLeagues.length;i++){\n  \n        if(user.userLeagues[i] === Static_NCAA){\n          setIsNCAASelected(true);\n  \n        }else if(user.userLeagues[i] === Static_NFL){\n          setIsNFLSelected(true);\n  \n        }else if(user.userLeagues[i] === Static_NBA){\n          setIsNBASelected(true);\n  \n        }else{\n          throw \"Invalid league \" & user.userLeagues[i];\n        }\n  \n      }\n    }\n    setSelectedValues();\n  },[user])\n\n  const setNCAATeamsChangeHandler = (e) => {\n    /*do not prevent default, we want the click*/\n    setUserTeams( (prev) => {\n\n      if(e.target.checked){\n\n        let teamArr = e.target.value.split(\"/\")\n\n        return[...prev,{\n          league: Static_NCAA,\n          team: teamArr[0],\n          mascot:teamArr[1]\n        }]\n\n      }else{\n\n        let found = false;\n        for(let i = 0; i < prev.length; i++){\n\n          if(prev[i].league === Static_NCAA && prev[i].team === e.target.value && !found){\n            prev.splice(i,1);\n            found = true;\n          }\n        }\n        return prev;      \n      }\n    }    \n    )\n    \n  }\n\n  const setUserInfoClickHandler = (e) => {\n    e.preventDefault();\n\n    setUser(() => (\n        { \n            email: user.email, \n            firstName: user.firstName,\n            lastName: user.lastName,\n            password: user.password,\n            userLeagues: user.userLeagues,\n            userTeams: userTeams\n            \n        })\n    );\n}\n\n\n  return (\n\n    <div>\n      <h2>Pick Your Teams</h2>\n      <ul>\n        {leagueList}\n      </ul>\n\n      <h3>College Teams</h3>\n\n      <form name=\"teamsPickForm\">\n        <fieldset className = {isCollegeSelected ? \"scroll\" : \"hidden\"} name=\"collegeTeamsPick\" form=\"teamsPickForm\">\n          {collegeDropDown}\n        </fieldset>\n      </form>\n\n      <button className=\"btn btn-dark\" onClick={setUserInfoClickHandler}>\n        <Link to=\"./Home\">\n          Next</Link>\n      </button>\n    </div>\n  );\n}\n\nexport default PickTeams;"]},"metadata":{},"sourceType":"module"}