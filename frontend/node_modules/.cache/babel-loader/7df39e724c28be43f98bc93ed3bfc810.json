{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwagner/Desktop/MyApps/mysportshub/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { Row, Col, Container, Tab, Tabs, Nav } from 'react-bootstrap';\nimport LogoutButton from './components/LogoutButton';\nimport { Auth0Provider, useAuth0 } from \"@auth0/auth0-react\";\nimport Login from './Login';\n/*will need to useEffect to auto-populate the teams and league when component mounts*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useAuth0();\n  const [userContext, setUserContext] = useContext(UserContext);\n  const [teamNewsAll, setTeamNewsAll] = useState([]);\n  const [currentTeamNews, setCurrentTeamNews] = useState(\"\");\n  const [teamTabs, setTeamTabs] = useState([]);\n  const [teamFeedTabs, setTeamFeedTabs] = useState([]);\n  /* useEffect(() => {\n      async function fetchTeamNews(team, mascot) {\n        const apiKey = '81948a14c62a4740a9d1a123afa96c28'\n        \n       let today = new Date()\n       let todayString = today.toISOString().slice(0, 10);\n        let dateFrom = new Date();\n       dateFrom.setDate(today.getDate() - 7);\n        let dateFromString = dateFrom.toISOString().slice(0, 10)\n        const newsApi = 'http://newsapi.org/v2/everything?q='\n         + team + ' ' + mascot + '&apiKey=' + apiKey + '&from=' + dateFromString + '&to=' + todayString + '&qlnTitle=' + mascot;\n        const data = await fetch(newsApi)\n        const teamNewsJSON = await data.json()\n       setTeamNewsAll( (prev) => {\n        for(let i = 0; i < prev.length; i++){\n          if(prev[i].fullTeamName === team + ' ' + mascot ){\n           return prev\n         }\n       }\n       \n       return [...prev,\n         {\n         fullTeamName: team + ' ' + mascot,\n         teamNews: teamNewsJSON }\n       ]}\n       )\n      }\n      const teamNavTabs = userContext.userTeams.map(\n          (team) => { const fullTeamName = team.team + \" \" + team.mascot;\n                   return <Nav.Item key={\"navItem_\" + fullTeamName}>\n                   <Nav.Link value={fullTeamName} onClick={updateGeneralNews}key={\"link_\" + fullTeamName} eventKey={fullTeamName}>\n                     {fullTeamName}</Nav.Link>\n                   </Nav.Item>\n          }\n        )\n        setTeamTabs(teamNavTabs);\n        for(let i = 0; i < userContext.userTeams.length; i++){\n         fetchTeamNews(userContext.userTeams[i].team,userContext.userTeams[i].mascot);\n       }\n        function updateGeneralNews(e) {\n          console.log(teamNewsAll);\n       \n           setCurrentTeamNews( () => {\n             for(let i = 0; i < teamNewsAll.length; i++){\n               if(teamNewsAll[i].fullTeamName === e.target.value){\n                 console.log(teamNewsAll[i].teamNews.articles[0].description);\n                 return teamNewsAll[i].teamNews.articles[0].description;\n               }\n             }\n             \n       \n           }\n           )\n       \n           const teamFeedTabs = userContext.userTeams.map(\n       \n             (team) => { const fullTeamName = team.team + \" \" + team.mascot;\n             \n                       return (<Tab.Pane key={\"pane_\" + fullTeamName} eventKey={fullTeamName}>\n                           <Tabs key={\"tabs_\" + fullTeamName} id=\"feed\" defaultActiveKey={userContext.userTeams[0].team + \" \" + userContext.userTeams[0].mascot}>\n                             <Tab key={\"gn_\" + fullTeamName} eventKey={\"gn_\" + fullTeamName} title=\"General News\">\n                               {currentTeamNews}\n                             </Tab>\n                             <Tab key={\"ss_\" + fullTeamName} eventKey={\"ss_\" + fullTeamName} title=\"Scores/Schedule\">\n                                 Hello scores and schedule\n                             </Tab>\n                             <Tab key={\"sm_\" + fullTeamName} eventKey={\"sm_\" + fullTeamName} title=\"Social Media\">\n                                 hi social media\n                             </Tab>\n                           </Tabs>\n                       </Tab.Pane>)\n             }\n       \n           )\n           setTeamFeedTabs(teamFeedTabs);\n         }\n  \n   }, [userContext]) */\n\n  let body;\n\n  if (isAuthenticated) {\n    body = /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        sm: 3,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: [\"Team Info\", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          children: \"Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n          defaultActiveKey: userContext.userTeams[0].team + \" \" + userContext.userTeams[0].mascot,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Nav, {\n                variant: \"pills\",\n                className: \"flex-column\",\n                children: teamTabs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 9,\n              children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n                children: teamFeedTabs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"i/i5XkGHiH1/PbkUlHtX6trCl/A=\", false, function () {\n  return [useAuth0];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/brandonwagner/Desktop/MyApps/mysportshub/src/Home.js"],"names":["UserContext","React","useContext","useEffect","useState","useRef","Row","Col","Container","Tab","Tabs","Nav","LogoutButton","Auth0Provider","useAuth0","Login","Home","isAuthenticated","userContext","setUserContext","teamNewsAll","setTeamNewsAll","currentTeamNews","setCurrentTeamNews","teamTabs","setTeamTabs","teamFeedTabs","setTeamFeedTabs","body","userTeams","team","mascot"],"mappings":"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","sourcesContent":["import './App.css';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useEffect, useState, useRef } from 'react'\nimport { Row, Col, Container, Tab, Tabs, Nav } from 'react-bootstrap'\nimport LogoutButton from './components/LogoutButton'\nimport { Auth0Provider, useAuth0 } from \"@auth0/auth0-react\";\nimport Login from './Login';\n\n/*will need to useEffect to auto-populate the teams and league when component mounts*/\n\nfunction Home() {\n\n  const { isAuthenticated } = useAuth0();\n  const [userContext, setUserContext] = useContext(UserContext);\n  const [teamNewsAll, setTeamNewsAll] = useState([]);\n  const [currentTeamNews, setCurrentTeamNews] = useState(\"\")\n  const [teamTabs, setTeamTabs] = useState([]);\n  const [teamFeedTabs, setTeamFeedTabs] = useState([]);\n\n /* useEffect(() => {\n\n    async function fetchTeamNews(team, mascot) {\n\n      const apiKey = '81948a14c62a4740a9d1a123afa96c28'\n\n      \n      let today = new Date()\n      let todayString = today.toISOString().slice(0, 10);\n\n      let dateFrom = new Date();\n      dateFrom.setDate(today.getDate() - 7);\n\n      let dateFromString = dateFrom.toISOString().slice(0, 10)\n\n      const newsApi = 'http://newsapi.org/v2/everything?q='\n        + team + ' ' + mascot + '&apiKey=' + apiKey + '&from=' + dateFromString + '&to=' + todayString + '&qlnTitle=' + mascot;\n\n      const data = await fetch(newsApi)\n\n      const teamNewsJSON = await data.json()\n      setTeamNewsAll( (prev) => {\n\n      for(let i = 0; i < prev.length; i++){\n\n        if(prev[i].fullTeamName === team + ' ' + mascot ){\n          return prev\n        }\n      }\n      \n      return [...prev,\n        {\n        fullTeamName: team + ' ' + mascot,\n        teamNews: teamNewsJSON }\n      ]}\n      )\n\n    }\n\n    const teamNavTabs = userContext.userTeams.map(\n\n        (team) => { const fullTeamName = team.team + \" \" + team.mascot;\n                  return <Nav.Item key={\"navItem_\" + fullTeamName}>\n                  <Nav.Link value={fullTeamName} onClick={updateGeneralNews}key={\"link_\" + fullTeamName} eventKey={fullTeamName}>\n                    {fullTeamName}</Nav.Link>\n                  </Nav.Item>\n\n        }\n\n      )\n\n      setTeamTabs(teamNavTabs);\n\n      for(let i = 0; i < userContext.userTeams.length; i++){\n        fetchTeamNews(userContext.userTeams[i].team,userContext.userTeams[i].mascot);\n      }\n\n      function updateGeneralNews(e) {\n\n        console.log(teamNewsAll);\n      \n          setCurrentTeamNews( () => {\n            for(let i = 0; i < teamNewsAll.length; i++){\n              if(teamNewsAll[i].fullTeamName === e.target.value){\n                console.log(teamNewsAll[i].teamNews.articles[0].description);\n                return teamNewsAll[i].teamNews.articles[0].description;\n              }\n            }\n            \n      \n          }\n          )\n      \n          const teamFeedTabs = userContext.userTeams.map(\n      \n            (team) => { const fullTeamName = team.team + \" \" + team.mascot;\n            \n                      return (<Tab.Pane key={\"pane_\" + fullTeamName} eventKey={fullTeamName}>\n                          <Tabs key={\"tabs_\" + fullTeamName} id=\"feed\" defaultActiveKey={userContext.userTeams[0].team + \" \" + userContext.userTeams[0].mascot}>\n                            <Tab key={\"gn_\" + fullTeamName} eventKey={\"gn_\" + fullTeamName} title=\"General News\">\n                              {currentTeamNews}\n                            </Tab>\n                            <Tab key={\"ss_\" + fullTeamName} eventKey={\"ss_\" + fullTeamName} title=\"Scores/Schedule\">\n                                Hello scores and schedule\n                            </Tab>\n                            <Tab key={\"sm_\" + fullTeamName} eventKey={\"sm_\" + fullTeamName} title=\"Social Media\">\n                                hi social media\n                            </Tab>\n                          </Tabs>\n                      </Tab.Pane>)\n            }\n      \n          )\n          setTeamFeedTabs(teamFeedTabs);\n        }\n\n\n  }, [userContext]) */\n\n\n  let body;\n  if(isAuthenticated){\n\n    body = <Container>\n              <Row sm={3}>\n                <Col sm={3}>\n                  Team Info\n                  <Login />               \n                </Col>\n\n                <Col sm={9}>Feed</Col>\n                <Tab.Container defaultActiveKey={userContext.userTeams[0].team + \" \" + userContext.userTeams[0].mascot}>\n                  <Row>\n                    <Col sm={3}>\n                      <Nav variant=\"pills\" className=\"flex-column\">\n                        {teamTabs}\n                      </Nav>\n                    </Col>\n                    <Col sm={9}>\n                      <Tab.Content>\n                        {teamFeedTabs}\n                      </Tab.Content>\n                    </Col>\n                  </Row>\n                </Tab.Container>\n              </Row>\n            </Container>\n  } else {\n       body= <Login />\n  }\n\n\n  return (\n    <div>\n      {body}\n    </div>\n    \n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}