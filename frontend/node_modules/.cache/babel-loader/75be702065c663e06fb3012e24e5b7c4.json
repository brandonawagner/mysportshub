{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwagner/Desktop/MyApps/mysportshub/src/PickTeams.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PickTeams() {\n  _s();\n\n  const [user, setUser] = useContext(UserContext);\n  const [userTeams, setUserTeams] = useState(user.userTeams);\n  const [cfbDropDown, setCFBDropDown] = useState([]);\n  const [isCFBSelected, setIsCFBSelected] = useState(false);\n  const [isNFLSelected, setIsNFLSelected] = useState(false);\n  const [isNBASelected, setIsNBASelected] = useState(false);\n  const leagueList = user.userLeagues.map(league => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: league\n  }, user.userLeagues.indexOf(league), false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this));\n  const teamsRef = useRef();\n  useEffect(() => {\n    async function fetchTeams() {\n      /*fetch college teams*/\n      const data = await fetch('https://api.collegefootballdata.com/teams/fbs');\n      const teams = await data.json();\n      const collegeTeamsChk = teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: setCFBTeamsChangeHandler,\n            style: {\n              display: \"in-line\"\n            },\n            type: \"checkbox\",\n            name: team.school + ' ' + team.mascot,\n            value: team.school + \"/\" + team.mascot\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \" \" + team.school]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this));\n      teamsRef.current = {\n        collegeTeamsChk\n      };\n      setCFBDropDown(teamsRef.current.collegeTeamsChk);\n    }\n\n    fetchTeams();\n\n    const setSelectedValues = () => {\n      for (let i = 0; i < user.userLeagues.length; i++) {\n        if (user.userLeagues[i] === \"CFB\") {\n          setIsCFBSelected(true);\n        } else if (user.userLeagues[i] === \"NFL\") {\n          setIsNFLSelected(true);\n        } else if (user.userLeagues[i] === \"NBA\") {\n          setIsNBASelected(true);\n        } else {\n          throw \"Invalid league \" & user.userLeagues[i];\n        }\n      }\n    };\n\n    setSelectedValues();\n  }, []);\n\n  const setCFBTeamsChangeHandler = e => {\n    /*do not prevent default, we want the click*/\n    setUserTeams(prev => {\n      if (e.target.checked) {\n        let teamArr = e.target.value.split(\"/\");\n        return [...prev, {\n          league: \"CFB\",\n          team: teamArr[0],\n          mascot: teamArr[1]\n        }];\n      } else {\n        let found = false;\n\n        for (let i = 0; i < prev.length; i++) {\n          if (prev[i].league === \"CFB\" && prev[i].team === e.target.value && !found) {\n            prev.splice(i, 1);\n            found = true;\n          }\n        }\n\n        return prev;\n      }\n    });\n  };\n\n  const setUserInfoClickHandler = e => {\n    e.preventDefault();\n    setUser(() => ({\n      email: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      password: user.password,\n      userLeagues: user.userLeagues,\n      userTeams: userTeams\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pick Your Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leagueList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"College Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"teamsPickForm\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: isCFBSelected ? \"scroll\" : \"hidden\",\n        name: \"cfbTeamsPick\",\n        form: \"teamsPickForm\",\n        children: cfbDropDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark\",\n      onClick: setUserInfoClickHandler,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./Home\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PickTeams, \"0qpsyK2CtC27swaioYVox9zyDuU=\");\n\n_c = PickTeams;\nexport default PickTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"PickTeams\");","map":{"version":3,"sources":["/Users/brandonwagner/Desktop/MyApps/mysportshub/src/PickTeams.js"],"names":["Link","UserContext","React","useContext","useState","useEffect","useRef","PickTeams","user","setUser","userTeams","setUserTeams","cfbDropDown","setCFBDropDown","isCFBSelected","setIsCFBSelected","isNFLSelected","setIsNFLSelected","isNBASelected","setIsNBASelected","leagueList","userLeagues","map","league","indexOf","teamsRef","fetchTeams","data","fetch","teams","json","collegeTeamsChk","team","setCFBTeamsChangeHandler","display","school","mascot","id","current","setSelectedValues","i","length","e","prev","target","checked","teamArr","value","split","found","splice","setUserInfoClickHandler","preventDefault","email","firstName","lastName","password"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,UAAU,CAACF,WAAD,CAAlC;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACI,IAAI,CAACE,SAAN,CAA1C;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMgB,UAAU,GAAGZ,IAAI,CAACa,WAAL,CAAiBC,GAAjB,CAChBC,MAAD,iBAAY;AAAA,cAA4CA;AAA5C,KAASf,IAAI,CAACa,WAAL,CAAiBG,OAAjB,CAAyBD,MAAzB,CAAT;AAAA;AAAA;AAAA;AAAA,UADK,CAAnB;AAIA,QAAME,QAAQ,GAAGnB,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAeqB,UAAf,GAA4B;AAE1B;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAxB;AAEA,YAAMC,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;AAEA,YAAMC,eAAe,GAAGF,KAAK,CAACP,GAAN,CACrBU,IAAD,iBAAU;AAAA,+BACR;AAAA,kCACE;AAAO,YAAA,QAAQ,EAAEC,wBAAjB;AAA2C,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAAlD;AAA0E,YAAA,IAAI,EAAC,UAA/E;AAAwG,YAAA,IAAI,EAAEF,IAAI,CAACG,MAAL,GAAc,GAAd,GAAoBH,IAAI,CAACI,MAAvI;AAA+I,YAAA,KAAK,EAAEJ,IAAI,CAACG,MAAL,GAAc,GAAd,GAAoBH,IAAI,CAACI;AAA/K,aAA+FJ,IAAI,CAACK,EAApG;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,MAAML,IAAI,CAACG,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ,SAAUH,IAAI,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA,cADY,CAAxB;AASAZ,MAAAA,QAAQ,CAACa,OAAT,GAAmB;AAAEP,QAAAA;AAAF,OAAnB;AACAlB,MAAAA,cAAc,CAACY,QAAQ,CAACa,OAAT,CAAiBP,eAAlB,CAAd;AACD;;AACDL,IAAAA,UAAU;;AAIV,UAAMa,iBAAiB,GAAG,MAAK;AAE7B,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGhC,IAAI,CAACa,WAAL,CAAiBoB,MAApC,EAA2CD,CAAC,EAA5C,EAA+C;AAE7C,YAAGhC,IAAI,CAACa,WAAL,CAAiBmB,CAAjB,MAAwB,KAA3B,EAAiC;AAC/BzB,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAED,SAHD,MAGM,IAAGP,IAAI,CAACa,WAAL,CAAiBmB,CAAjB,MAAwB,KAA3B,EAAiC;AACrCvB,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAED,SAHK,MAGA,IAAGT,IAAI,CAACa,WAAL,CAAiBmB,CAAjB,MAAwB,KAA3B,EAAiC;AACrCrB,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAED,SAHK,MAGD;AACH,gBAAM,oBAAoBX,IAAI,CAACa,WAAL,CAAiBmB,CAAjB,CAA1B;AACD;AAEF;AACF,KAlBD;;AAmBAD,IAAAA,iBAAiB;AAClB,GA7CQ,EA6CP,EA7CO,CAAT;;AA+CA,QAAMN,wBAAwB,GAAIS,CAAD,IAAO;AACtC;AACA/B,IAAAA,YAAY,CAAGgC,IAAD,IAAU;AAEtB,UAAGD,CAAC,CAACE,MAAF,CAASC,OAAZ,EAAoB;AAElB,YAAIC,OAAO,GAAGJ,CAAC,CAACE,MAAF,CAASG,KAAT,CAAeC,KAAf,CAAqB,GAArB,CAAd;AAIA,eAAM,CAAC,GAAGL,IAAJ,EAAS;AACbpB,UAAAA,MAAM,EAAE,KADK;AAEbS,UAAAA,IAAI,EAAEc,OAAO,CAAC,CAAD,CAFA;AAGbV,UAAAA,MAAM,EAACU,OAAO,CAAC,CAAD;AAHD,SAAT,CAAN;AAMD,OAZD,MAYK;AAEH,YAAIG,KAAK,GAAG,KAAZ;;AACA,aAAI,IAAIT,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGG,IAAI,CAACF,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAElC,cAAGG,IAAI,CAACH,CAAD,CAAJ,CAAQjB,MAAR,KAAmB,KAAnB,IAA4BoB,IAAI,CAACH,CAAD,CAAJ,CAAQR,IAAR,KAAiBU,CAAC,CAACE,MAAF,CAASG,KAAtD,IAA+D,CAACE,KAAnE,EAAyE;AACvEN,YAAAA,IAAI,CAACO,MAAL,CAAYV,CAAZ,EAAc,CAAd;AACAS,YAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AACD,eAAON,IAAP;AACD;AACF,KA1BW,CAAZ;AA6BD,GA/BD;;AAiCA,QAAMQ,uBAAuB,GAAIT,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACU,cAAF;AAEA3C,IAAAA,OAAO,CAAC,OACJ;AACI4C,MAAAA,KAAK,EAAE7C,IAAI,CAAC6C,KADhB;AAEIC,MAAAA,SAAS,EAAE9C,IAAI,CAAC8C,SAFpB;AAGIC,MAAAA,QAAQ,EAAE/C,IAAI,CAAC+C,QAHnB;AAIIC,MAAAA,QAAQ,EAAEhD,IAAI,CAACgD,QAJnB;AAKInC,MAAAA,WAAW,EAAEb,IAAI,CAACa,WALtB;AAMIX,MAAAA,SAAS,EAAEA;AANf,KADI,CAAD,CAAP;AAWH,GAdC;;AAiBA,sBAEE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGU;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAM,MAAA,IAAI,EAAC,eAAX;AAAA,6BACE;AAAU,QAAA,SAAS,EAAIN,aAAa,GAAG,QAAH,GAAc,QAAlD;AAA4D,QAAA,IAAI,EAAC,cAAjE;AAAgF,QAAA,IAAI,EAAC,eAArF;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEuC,uBAA1C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GAxIQ5C,S;;KAAAA,S;AA0IT,eAAeA,SAAf","sourcesContent":["import './App.css';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport React, { useContext, useState, useEffect, useRef } from 'react'\n\n\nfunction PickTeams() {\n\n  const [user, setUser] = useContext(UserContext);\n\n  const [userTeams, setUserTeams] = useState(user.userTeams)\n\n  const [cfbDropDown, setCFBDropDown] = useState([])\n\n  const [isCFBSelected, setIsCFBSelected] = useState(false)\n  const [isNFLSelected, setIsNFLSelected] = useState(false)\n  const [isNBASelected, setIsNBASelected] = useState(false)\n\n  const leagueList = user.userLeagues.map(\n    (league) => <li key={user.userLeagues.indexOf(league)}>{league}</li>\n  )\n\n  const teamsRef = useRef();\n  useEffect(() => {\n\n    async function fetchTeams() {\n\n      /*fetch college teams*/\n      const data = await fetch('https://api.collegefootballdata.com/teams/fbs')\n  \n      const teams = await data.json()\n  \n      const collegeTeamsChk = teams.map(\n        (team) => <div key={team.id}>\n          <label>\n            <input onChange={setCFBTeamsChangeHandler} style={{ display: \"in-line\" }} type=\"checkbox\" key={team.id} name={team.school + ' ' + team.mascot} value={team.school + \"/\" + team.mascot} />\n            {\" \" + team.school}\n          </label>\n        </div>\n      )\n  \n      teamsRef.current = { collegeTeamsChk };\n      setCFBDropDown(teamsRef.current.collegeTeamsChk)\n    }\n    fetchTeams();\n\n\n\n    const setSelectedValues = () =>{\n\n      for(let i = 0; i < user.userLeagues.length;i++){\n  \n        if(user.userLeagues[i] === \"CFB\"){\n          setIsCFBSelected(true);\n  \n        }else if(user.userLeagues[i] === \"NFL\"){\n          setIsNFLSelected(true);\n  \n        }else if(user.userLeagues[i] === \"NBA\"){\n          setIsNBASelected(true);\n  \n        }else{\n          throw \"Invalid league \" & user.userLeagues[i];\n        }\n  \n      }\n    }\n    setSelectedValues();\n  },[])\n\n  const setCFBTeamsChangeHandler = (e) => {\n    /*do not prevent default, we want the click*/\n    setUserTeams( (prev) => {\n\n      if(e.target.checked){\n\n        let teamArr = e.target.value.split(\"/\")\n\n\n\n        return[...prev,{\n          league: \"CFB\",\n          team: teamArr[0],\n          mascot:teamArr[1]\n        }]\n\n      }else{\n\n        let found = false;\n        for(let i = 0; i < prev.length; i++){\n\n          if(prev[i].league === \"CFB\" && prev[i].team === e.target.value && !found){\n            prev.splice(i,1);\n            found = true;\n          }\n        }\n        return prev;      \n      }\n    }    \n    )\n    \n  }\n\n  const setUserInfoClickHandler = (e) => {\n    e.preventDefault();\n\n    setUser(() => (\n        { \n            email: user.email, \n            firstName: user.firstName,\n            lastName: user.lastName,\n            password: user.password,\n            userLeagues: user.userLeagues,\n            userTeams: userTeams\n            \n        })\n    );\n}\n\n\n  return (\n\n    <div>\n      <h2>Pick Your Teams</h2>\n      <ul>\n        {leagueList}\n      </ul>\n\n      <h3>College Teams</h3>\n\n      <form name=\"teamsPickForm\">\n        <fieldset className = {isCFBSelected ? \"scroll\" : \"hidden\"} name=\"cfbTeamsPick\" form=\"teamsPickForm\">\n          {cfbDropDown}\n        </fieldset>\n      </form>\n\n      <button className=\"btn btn-dark\" onClick={setUserInfoClickHandler}>\n        <Link to=\"./Home\">\n          Next</Link>\n      </button>\n    </div>\n  );\n}\n\nexport default PickTeams;"]},"metadata":{},"sourceType":"module"}